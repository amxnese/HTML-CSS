/*
CSS units are used to measure lengths, sizes, and other dimensions in CSS. They define how properties like width, 
height, padding, margin, font-size, and more are sized. There are various units available, each suited for different
contexts. CSS units can be broadly categorized into two types: absolute and relative units.

Absolute Units
Absolute units are fixed and are not affected by other settings like screen size or the parent element's properties. 
They are useful when a precise size is required.

px (pixels): The most commonly used absolute unit. It represents a single dot on the screen.
cm (centimeters): A unit of measurement in the metric system.
mm (millimeters): Another metric system unit.
in (inches): A unit of measurement in the imperial system.
pt (points): Commonly used in print media, where 1 point is 1/72 of an inch.
pc (picas): Another print media unit, where 1 pica equals 12 points.

Relative Units
Relative units are more flexible as they scale according to other elements or settings in the document. 
They are often preferred for responsive design.
em: Relative to the font-size of the element. For example, 2em means 2 times the current font size of the element.
rem: Relative to the font-size of the root element (<html>). It stands for "root em."
% (percentage): Relative to the parent element's size. For example, width: 50% means 50% of the parent's width.
vw (viewport width): 1% of the width of the viewport.
vh (viewport height): 1% of the height of the viewport.
vmin: 1% of the smaller dimension of the viewport (width or height).
vmax: 1% of the larger dimension of the viewport (width or height).
ch: The width of the "0" (zero) character in the current font.
ex: The height of the lowercase "x" in the current font. */

/* absolute units */
.element {
  width: 300px;
  height: 2in;
  margin: 1cm;
  padding: 10mm;
  font-size: 12pt;
  border-width: 0.5pc;
}

/* relative units */
body {
  font-size: 16px; /* Base font size */
}

.element {
  width: 50%;
  padding: 2em;
  font-size: 1.5rem;
  margin: 10vh 5vw;
}

.small-text {
  font-size: 0.8em;
}

/* 
Use Cases
Responsive Design: Relative units like %, em, rem, vw, and vh are commonly used for responsive design to 
ensure elements scale appropriately on different devices.
Typography: Using em and rem for font sizes allows for scalable and accessible text. rem is particularly 
useful for maintaining consistent typography across different components.
Precise Layouts: Absolute units like px are useful when exact dimensions are needed, such as in pixel-perfect
designs or when integrating with raster graphics.

Best Practices
Use rem for font sizes: This ensures that all font sizes are relative to the root font size, making it easier 
to scale the entire document by changing just one value.
Use % for layout widths: This makes layouts more flexible and responsive to the parent container's size.
Use em for spacing: Using em for margins and padding makes them relative to the element's font size, which 
can be useful for creating proportionate spacing.
By understanding and appropriately using CSS units, you can create more versatile and adaptable web designs. 
*/